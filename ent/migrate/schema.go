// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CategoriesColumns holds the columns for the "categories" table.
	CategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
	}
	// CategoriesTable holds the schema information for the "categories" table.
	CategoriesTable = &schema.Table{
		Name:       "categories",
		Columns:    CategoriesColumns,
		PrimaryKey: []*schema.Column{CategoriesColumns[0]},
	}
	// TodosColumns holds the columns for the "todos" table.
	TodosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "text", Type: field.TypeString},
		{Name: "done", Type: field.TypeBool, Default: false},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_todos", Type: field.TypeUUID},
	}
	// TodosTable holds the schema information for the "todos" table.
	TodosTable = &schema.Table{
		Name:       "todos",
		Columns:    TodosColumns,
		PrimaryKey: []*schema.Column{TodosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "todos_users_todos",
				Columns:    []*schema.Column{TodosColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// CategoryTodosColumns holds the columns for the "category_todos" table.
	CategoryTodosColumns = []*schema.Column{
		{Name: "category_id", Type: field.TypeUUID},
		{Name: "todo_id", Type: field.TypeUUID},
	}
	// CategoryTodosTable holds the schema information for the "category_todos" table.
	CategoryTodosTable = &schema.Table{
		Name:       "category_todos",
		Columns:    CategoryTodosColumns,
		PrimaryKey: []*schema.Column{CategoryTodosColumns[0], CategoryTodosColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "category_todos_category_id",
				Columns:    []*schema.Column{CategoryTodosColumns[0]},
				RefColumns: []*schema.Column{CategoriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "category_todos_todo_id",
				Columns:    []*schema.Column{CategoryTodosColumns[1]},
				RefColumns: []*schema.Column{TodosColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CategoriesTable,
		TodosTable,
		UsersTable,
		CategoryTodosTable,
	}
)

func init() {
	TodosTable.ForeignKeys[0].RefTable = UsersTable
	CategoryTodosTable.ForeignKeys[0].RefTable = CategoriesTable
	CategoryTodosTable.ForeignKeys[1].RefTable = TodosTable
}
